// Mocks generated by Mockito 5.4.4 from annotations
// in application/test/pods/use_cases/get_pod_by_id_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:domain/features/pods/entities/pod.dart' as _i2;
import 'package:domain/features/pods/repositories/pods.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePod_0 extends _i1.SmartFake implements _i2.Pod {
  _FakePod_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Pods].
///
/// See the documentation for Mockito's code generation for more information.
class MockPods extends _i1.Mock implements _i3.Pods {
  MockPods() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Pod>> getAllPods() => (super.noSuchMethod(
        Invocation.method(
          #getAllPods,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Pod>>.value(<_i2.Pod>[]),
      ) as _i4.Future<List<_i2.Pod>>);

  @override
  _i4.Future<_i2.Pod> getPodById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getPodById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Pod>.value(_FakePod_0(
          this,
          Invocation.method(
            #getPodById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Pod>);

  @override
  _i4.Future<void> savePod(_i2.Pod? pod) => (super.noSuchMethod(
        Invocation.method(
          #savePod,
          [pod],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updatePod(_i2.Pod? pod) => (super.noSuchMethod(
        Invocation.method(
          #updatePod,
          [pod],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deletePod(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deletePod,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> batchUpdateAthleteAssociations(
          Map<String, String?>? podIdToAthleteId) =>
      (super.noSuchMethod(
        Invocation.method(
          #batchUpdateAthleteAssociations,
          [podIdToAthleteId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
